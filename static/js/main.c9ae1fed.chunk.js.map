{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Navbar/FriendsBlock/FriendsBlock.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","assets/img/user.jpg","components/Navbar/Navbar.module.css","serviceWorker.js","redux/profileReducer.js","redux/dialogsReducer.js","redux/friendsDataReducer.js","redux/usersReducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Music/Music.jsx","components/News/News.jsx","components/Settings/Settings.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","PostsData","id","postText","postLikes","newPostTextArea","profileReducer","state","action","type","newPost","newText","DialogsData","name","MessagesData","message","own","newMessageText","dialogsReducer","body","friends","photo","friendsDataReducer","users","userReducer","map","u","userID","followed","reducers","combineReducers","profilePage","dialogPage","friendsData","usersPage","usersReducer","store","createStore","Header","className","css","header","src","alt","width","Navbar","nav","item","to","activeClassName","active","ProfileInfo","cover","description","Post","props","like","counter","likesCounter","MyPosts","postsComponents","posts","post","newPostElement","React","createRef","postsBlock","onChange","text","current","value","updateNewPostText","ref","onClick","addPost","MyPostsContainer","connect","dispatch","UpdatePostActionCreator","Profile","Music","News","Settings","DialogItem","path","MessagesItem","right","Dialogs","DialogsComponents","dialogs","dialog","MessageComponents","messages","newMessageBody","messageBody","dialogsItems","e","target","placeholder","sendMessage","DialogsContainer","UpdateNewMessageText","Users","axios","get","then","response","console","log","setUsers","data","items","this","key","photos","small","userPhoto","unfollow","follow","status","city","country","Component","userId","setUsersAC","App","component","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","getState"],"mappings":"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","file":"static/js/main.c9ae1fed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"item\":\"Dialogs_item__29pPd\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\",\"right\":\"Dialogs_right__2USLQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"FriendsBlock_friends__3jHul\",\"friendsItem\":\"FriendsBlock_friendsItem__bcbeU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3tZ1c\",\"header\":\"MyPosts_header__2Sser\",\"newPost\":\"MyPosts_newPost__3FkQO\",\"postsBlock\":\"MyPosts_postsBlock__2ifKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"like\":\"Post_like__oViQh\",\"counter\":\"Post_counter__14HCt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"ProfileInfo_cover__301bp\",\"description\":\"ProfileInfo_description__2yWda\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\"};","module.exports = __webpack_public_path__ + \"static/media/user.86ce965f.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"active\":\"Navbar_active__3mbhk\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nconst ADD_NEW_POST = 'ADD-NEW-POST';\nconst UPDATE_POST_TEXTAREA = 'UPDATE-POST-TEXTAREA'\n\nlet initialState = {\n    PostsData : [\n        {\n            id: 1,\n            postText: \"Клевый пост\",\n            postLikes: 10\n        },\n        {\n            id: 2,\n            postText: \"Hello, how are you?\",\n            postLikes: 8\n        },\n        {\n            id: 3,\n            postText: \"Somebody loves me\",\n            postLikes: 24\n        },\n        {\n            id: 4,\n            postText: \"It's my first post\",\n            postLikes: 3\n        }\n    ],\n    newPostTextArea : \"\"\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_NEW_POST:\n            let newPost = {\n                id: 5,\n                postText: state.newPostTextArea,\n                postLikes: 0\n            }\n            return {\n                ...state,\n                newPostTextArea: '',\n                PostsData: [...state.PostsData, newPost]\n            }\n        case UPDATE_POST_TEXTAREA:\n            return {\n                ...state,\n                newPostTextArea : action.newText\n            }\n        default:\n            return state\n    }\n}\n\n\nexport const AddPostActionCreator = () => {\n    return {\n        type: ADD_NEW_POST\n    }\n}\n\nexport const UpdatePostActionCreator = (text) => {\n\n    return {\n        type: UPDATE_POST_TEXTAREA, newText:text\n    }\n}\n\nexport default profileReducer","const SEND_MESSAGE = 'SEND-MESSAGE'\nconst UPDATE_NEW_MESSAGE = 'UPDATE-NEW-MESSAGE'\n\n\nlet initialState = {\n    DialogsData : [\n        {id: 1, name: \"Timych\"},\n        {id: 2, name: \"Yulia\"},\n        {id: 3, name: \"Asal\"},\n        {id: 4, name: \"Sasha\"},\n        {id: 5, name: \"Dimych\"}\n    ],\n    MessagesData : [\n        {id: 1, message: \"How are you?!\", own:false},\n        {id: 2, message: \"Cool! Learning react!\", own:true},\n        {id: 3, message: \"Node rules\", own:false},\n        {id: 4, message: \"Node rules\", own:false},\n        {id: 5, message: \"Node rules\", own:false}\n    ],\n    newMessageText : \"\"\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case SEND_MESSAGE:\n            let body = state.newMessageText;\n            return {\n                ...state,\n                newMessageText : \"\",\n                MessagesData : [...state.MessagesData, {id: 6, message: body, own: true}]\n            }\n\n        case UPDATE_NEW_MESSAGE:\n            return {\n                ...state,\n                newMessageText: action.body\n            }\n\n        default:\n            return state\n    }\n\n}\n\n\n\nexport const SendMessageCreator = () => {\n    return {\n        type: SEND_MESSAGE\n    }\n}\nexport const UpdateNewMessageText = (text) => {\n    return {\n        type: UPDATE_NEW_MESSAGE, body:text\n    }\n}\n\nexport default dialogsReducer","\n\n\nlet initialState = {friends: [\n        {\n            id: 1,\n            name: \"Sasha\",\n            photo: \"https://www.befunky.com/images/prismic/2ba00f8e1b504cd1576ff85bd101c2137ea6a02e_landing-photo-to-art-img-4-before.png?auto=webp&format=jpg&width=736\"\n        },\n        {\n            id: 2,\n            name: \"Yuliya\",\n            photo: \"https://i2.wp.com/www.alphr.com/wp-content/uploads/2018/04/how_to_back_up_photos_on_google_photos.jpg?resize=563%2C563&ssl=1\"\n        },\n        {\n            id: 3,\n            name: \"Asal\",\n            photo: \"https://i.pinimg.com/474x/98/3f/e4/983fe4272910dd6579a4e046202f4c38.jpg\"\n        }\n    ]}\n\n\nconst friendsDataReducer = (state = initialState, action) => {\n\n    return state\n}\n\nexport default friendsDataReducer","\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS'\n\nlet initialState = {\n    users : []\n}\n\nconst userReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map( u => {\n                    if( u.id === action.userID) {\n                        return {...u, followed: true}\n                    }\n                    return u\n                })\n            }\n\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map( u => {\n                    if( u.id === action.userID  ) {\n                        return {...u, followed: false}\n                    }\n                    return u\n                })\n            }\n\n        case SET_USERS:\n            return {...state, users: [...state.users, ...action.users]}\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const followAC = (userID) => {\n    return {\n        type: FOLLOW,\n        userID\n    }\n}\nexport const unfollowAC = (userID) => {\n    return {\n        type: UNFOLLOW,\n        userID\n    }\n}\n\nexport const setUsersAC = (users) => {\n    return {\n        type: SET_USERS,\n        users\n    }\n}\n\n\nexport default userReducer\n","import {combineReducers, createStore} from \"redux\";\nimport profileReducer from \"./profileReducer\";\nimport dialogsReducer from \"./dialogsReducer\";\nimport friendsDataReducer from \"./friendsDataReducer\";\nimport usersReducer from \"./usersReducer\";\n\nlet reducers = combineReducers({\n    profilePage : profileReducer,\n    dialogPage : dialogsReducer,\n    friendsData : friendsDataReducer,\n    usersPage : usersReducer\n})\n\nlet store = createStore(reducers)\n\nexport default store;","import React from \"react\";\nimport css from './Header.module.css'\n\nconst Header = () => {\n    return (\n        <header className={css.header}>\n        <img src=\"https://upload.wikimedia.org/wikipedia/commons/1/1e/RPC-JP_Logo.png\" alt=\"\" width='100'/>\n    </header>\n    );\n}\n\nexport default Header;","import React from \"react\";\nimport css from './Navbar.module.css'\nimport {NavLink} from \"react-router-dom\";\nimport Friends from \"./FriendsBlock/FriendsBlock\";\n\nconst Navbar = () => {\n    return (\n        <nav className={css.nav}>\n            <div>\n                <div className={css.item}>\n                    <NavLink to=\"/profile\" activeClassName={css.active}>Profile</NavLink>\n                </div>\n                <div className={css.item}>\n                    <NavLink to=\"/dialogs\" activeClassName={css.active}>Dialogs</NavLink>\n                </div>\n                <div className={css.item}>\n                    <NavLink to=\"/users\" activeClassName={css.active}>Users</NavLink>\n                </div>\n                <div className={css.item}>\n                    <NavLink to=\"/news\" activeClassName={css.active}>News</NavLink>\n                </div>\n                <div className={css.item}>\n                    <NavLink to=\"/music\" activeClassName={css.active}>Music</NavLink>\n                </div>\n                <div className={css.item}>\n                    <NavLink to=\"/settings\" activeClassName={css.active}>Settings</NavLink>\n                </div>\n            </div>\n            {/*<StoreContext.Consumer>*/}\n            {/*    { (store)=>{*/}\n            {/*        let state = store.getState()*/}\n            {/*        return <Friends friends={state.friendsData.friends}/>*/}\n            {/*    }}*/}\n            {/*</StoreContext.Consumer>*/}\n        </nav>\n    );\n}\n\nexport default Navbar;","import React from \"react\";\nimport css from './ProfileInfo.module.css'\n\nconst ProfileInfo = () => {\n    return (\n        <div>\n            <div className={css.cover}>\n                <img src=\"https://p.bigstockphoto.com/eIdTXLbqQilMs9xbjvcs_bigstock-Aerial-View-Of-Sandy-Beach-Wit-256330393.jpg\" alt=\"\"/>\n            </div>\n            <div className={css.description}>\n                <img src=\"https://cdn.iconscout.com/icon/free/png-512/avatar-375-456327.png\" alt=\"\"/>\n                About me\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import React from \"react\";\nimport css from \"./Post.module.css\";\n\nconst Post = (props) => {\n    return (\n        <div>\n\n            <div className={css.item}>\n                <img src=\"https://cdn.iconscout.com/icon/free/png-512/avatar-375-456327.png\" alt=\"\"/>\n                {props.message}\n            </div>\n            <div className={css.like}>\n                <span>like</span>\n                <span className={css.counter}> {props.likesCounter}</span>\n            </div>\n        </div>\n    )\n}\nexport  default Post;\n","import css from \"./MyPosts.module.css\";\nimport React from \"react\";\nimport Post from \"./Post/Post\";\n\n\nconst MyPosts = (props) => {\n\n    let postsComponents = props.posts.map(post => <Post message={post.postText} likesCounter={post.postLikes}/>);\n\n    let newPostElement = React.createRef()\n\n    let onPostChange = () => {\n        let text = newPostElement.current.value;\n        props.updateNewPostText(text)\n    }\n\n    return (\n        <div className={css.postsBlock}>\n            <div className={css.header}> My Posts </div>\n            <div>\n                <div>\n                    <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostTextArea}/>\n                </div>\n                <button onClick={props.addPost}>Post</button></div>\n            <div className={css.posts}>\n                {postsComponents}\n            </div>\n        </div>\n    )\n}\n\nexport default MyPosts;","import React from \"react\";\nimport {AddPostActionCreator, UpdatePostActionCreator} from \"../../../redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.PostsData,\n        newPostTextArea: state.profilePage.newPostTextArea\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPost : () => {\n            dispatch(AddPostActionCreator())\n        },\n        updateNewPostText : (text) => {\n            dispatch(UpdatePostActionCreator(text))\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\n\nexport default MyPostsContainer;","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo />\n            <MyPostsContainer />\n        </div>\n    )\n}\n\nexport default Profile;","import React from \"react\";\n\n\nconst Music = () => {\n    return (\n        <div>Music</div>\n    )\n}\n\nexport default Music;\n","import React from \"react\";\n\n\nconst News = () => {\n    return (\n        <div>News</div>\n    )\n}\n\nexport default News;\n","import React from \"react\";\n\n\nconst Settings = () => {\n    return (\n        <div>Settings</div>\n    )\n}\n\nexport default Settings;\n","import React from \"react\";\nimport css from \"./../Dialogs.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\n\nconst DialogItem = (props) => {\n    let path = \"/dialogs/\" + props.id;\n    return (\n        <div className={css.item + ' ' + css.active}>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;","import React from \"react\";\nimport css from \"./../Dialogs.module.css\";\n\n\nconst MessagesItem = (props) => {\n    if(props.own) {\n        return (\n            <div className={css.message + ' ' + css.right}>\n                {props.message}\n            </div>\n        )\n    } else {\n        return (\n            <div className={css.message}>\n                {props.message}\n            </div>\n        )\n    }\n}\n\nexport default MessagesItem;","import React from \"react\";\nimport css from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport MessagesItem from \"./MessageItem/MessageItem\";\n\n\n\nconst Dialogs =  (props) => {\n\n    let DialogsComponents = props.dialogs.map( dialog => <DialogItem name={dialog.name} id={dialog.id}/>);\n    let MessageComponents = props.messages.map( message => <li><MessagesItem message={message.message} id={message.id} own={message.own}/></li>);\n\n    let newMessageBody = props.messageBody;\n\n    let onChange = (e) => {\n        let body = e.target.value\n        props.onChange(body)\n    }\n\n    return (\n        <div className={css.dialogs}>\n            <div className={css.dialogsItems}>\n                {DialogsComponents}\n            </div>\n            <div className={css.messages}>\n                <div>\n                    {MessageComponents}\n                </div>\n                <div>\n                    <div><textarea value={newMessageBody}\n                                   onChange={onChange}\n                                   placeholder={\"Enter your message\"}\n                    ></textarea></div>\n                    <div><button onClick={props.sendMessage}>Send</button></div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Dialogs;","import React from \"react\";\nimport {SendMessageCreator, UpdateNewMessageText} from \"../../redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\n\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogs : state.dialogPage.DialogsData,\n        messages: state.dialogPage.MessagesData,\n        messageBody: state.dialogPage.newMessageText\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onChange : (text) => {\n            dispatch(UpdateNewMessageText(text))\n        },\n        sendMessage : () => {\n            dispatch(SendMessageCreator())\n        }\n    }\n}\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n\nexport default DialogsContainer;","import React from 'react'\nimport axios from \"axios\";\nimport userPhoto from \"../../assets/img/user.jpg\"\n\nclass Users extends React.Component {\n\n     componentDidMount() {\n         axios.get(\"https://social-network.samuraijs.com/api/1.0/users\").then(response => {\n             console.log(response)\n             this.props.setUsers(response.data.items)\n         })\n     }\n\n    render () {\n        return <div>\n            {\n                this.props.users.map( u => <div key={u.id}>\n            <span>\n            <div><img src={u.photos.small ? u.photos.small : userPhoto } alt=\"\" width=\"100\"/></div>\n            <div>{\n                u.followed\n                    ?   <button onClick={()=>this.props.unfollow(u.id)}>Unfollow</button>\n                    :   <button onClick={()=>this.props.follow(u.id)}>Follow</button>\n            }</div>\n            </span>\n                    <span>\n            <span>\n            <div>{u.name}</div>\n            <div>{u.status}</div>\n            </span>\n            <span>\n            <div>{u.location ? u.location.city : \"some city\"}</div>\n            <div>{u.location ? u.location.country : \"some country\"}</div>\n            </span>\n            </span>\n                </div>)\n            }\n        </div>;\n    }\n}\n\nexport default Users;","import {connect} from \"react-redux\";\nimport Users from \"./Users\";\nimport {followAC, unfollowAC, setUsersAC} from \"../../redux/usersReducer\";\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users\n    }\n}\n\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        follow : (userId)=> {\n            dispatch(followAC(userId))\n        },\n        unfollow : (userId)=> {\n\n            dispatch(unfollowAC(userId))\n        },\n        setUsers : (users)=> {\n            dispatch(setUsersAC(users))\n        }\n    }\n}\n\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Profile/Profile\";\nimport Music from \"./components/Music/Music\";\nimport News from \"./components/News/News\";\nimport Settings from \"./components/Settings/Settings\";\nimport {Route, BrowserRouter} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersConatiner from \"./components/Users/UsersContainer\"\n\nconst App = () => {\n  return (\n      <BrowserRouter>\n          <div className='app-wrapper'>\n              <Header />\n              <Navbar />\n              <div className=\"app-wrapper-content\">\n                  <Route path=\"/dialogs\" component={()=> <DialogsContainer /> } />\n                  <Route path=\"/profile\" component={()=> <Profile /> } />\n                  <Route path=\"/users\" render={()=><UsersConatiner />}/>\n                  <Route path=\"/news\" component={News}/>\n                  <Route path=\"/music\" component={Music}/>\n                  <Route path=\"/settings\" component={Settings}/>\n              </div>\n\n          </div>\n      </BrowserRouter>\n  );\n}\n\n\n\nexport default App;\n","import * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store.js\"\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider >\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\nwindow.store  = store.getState();"],"sourceRoot":""}