{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Navbar/FriendsBlock/FriendsBlock.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","serviceWorker.js","components/Header/Header.jsx","components/Navbar/FriendsBlock/Friend/Friend.jsx","components/Navbar/FriendsBlock/FriendsBlock.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Music/Music.jsx","components/News/News.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/Dialogs.jsx","components/Settings/Settings.jsx","App.js","redux/state.js","render.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","unregister","navigator","serviceWorker","ready","then","registration","catch","error","console","message","Header","className","css","header","src","alt","width","Friend","props","friendsItem","photo","name","Friends","friends","map","friend","Navbar","nav","item","to","activeClassName","active","data","Post","like","counter","likesCounter","MyPosts","postsComponents","PostsData","post","postText","postLikes","newPostElement","React","createRef","postsBlock","newPost","ref","cols","rows","onClick","text","current","value","addPost","posts","ProfileInfo","cover","description","Profile","Music","News","DialogItem","path","id","MessagesItem","own","right","Dialogs","DialogsComponents","DialogsData","dialog","MessageComponents","MessagesData","dialogs","dialogsItems","messages","Settings","App","friendsData","component","dialogPage","profilePage","state","push","renderEntireTree","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9d43568.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"active\":\"Navbar_active__3mbhk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"item\":\"Dialogs_item__29pPd\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\",\"right\":\"Dialogs_right__2USLQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3tZ1c\",\"header\":\"MyPosts_header__2Sser\",\"newPost\":\"MyPosts_newPost__3FkQO\",\"postsBlock\":\"MyPosts_postsBlock__2ifKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"FriendsBlock_friends__3jHul\",\"friendsItem\":\"FriendsBlock_friendsItem__bcbeU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"like\":\"Post_like__oViQh\",\"counter\":\"Post_counter__14HCt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"ProfileInfo_cover__301bp\",\"description\":\"ProfileInfo_description__2yWda\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport css from './Header.module.css'\n\nconst Header = () => {\n    return (\n        <header className={css.header}>\n        <img src=\"https://upload.wikimedia.org/wikipedia/commons/1/1e/RPC-JP_Logo.png\" alt=\"\" width='100'/>\n    </header>\n    );\n}\n\nexport default Header;","import css from \"./../FriendsBlock.module.css\";\nimport React from \"react\";\n\nconst Friend = (props) => {\n    return (\n        <div className={css.friendsItem}>\n            <img src={props.photo} alt=\"\"/>\n            <span>{props.name}</span>\n        </div>\n    )\n};\n\nexport default Friend;\n","import React from \"react\";\nimport css from \"./FriendsBlock.module.css\"\nimport Friend from \"./Friend/Friend\";\n\nconst Friends = (props) => {\n    let friends = props.friends.map(friend => <Friend name={friend.name} photo={friend.photo}/>)\n    return (\n        <div>\n            <h3>Friends</h3>\n            <div className={css.friends}>\n                {friends}\n            </div>\n        </div>\n    )\n}\n\nexport default Friends;","import React from \"react\";\nimport css from './Navbar.module.css'\nimport {NavLink} from \"react-router-dom\";\nimport Friends from \"./FriendsBlock/FriendsBlock\";\n\nconst Navbar = (props) => {\n    return (\n        <nav className={css.nav}>\n            <div>\n                <div className={css.item}>\n                    <NavLink to=\"/profile\" activeClassName={css.active}>Profile</NavLink>\n                </div>\n                <div className={css.item}>\n                    <NavLink to=\"/dialogs\" activeClassName={css.active}>Dialogs</NavLink>\n                </div>\n                <div className={css.item}>\n                    <NavLink to=\"/news\" activeClassName={css.active}>News</NavLink>\n                </div>\n                <div className={css.item}>\n                    <NavLink to=\"/music\" activeClassName={css.active}>Music</NavLink>\n                </div>\n                <div className={css.item}>\n                    <NavLink to=\"/settings\" activeClassName={css.active}>Settings</NavLink>\n                </div>\n            </div>\n            <Friends friends={props.data}/>\n        </nav>\n    );\n}\n\nexport default Navbar;","import React from \"react\";\nimport css from \"./Post.module.css\";\n\nconst Post = (props) => {\n    return (\n        <div>\n\n            <div className={css.item}>\n                <img src=\"https://cdn.iconscout.com/icon/free/png-512/avatar-375-456327.png\" alt=\"\"/>\n                {props.message}\n            </div>\n            <div className={css.like}>\n                <span>like</span>\n                <span className={css.counter}> {props.likesCounter}</span>\n            </div>\n        </div>\n    )\n}\nexport  default Post;\n","import css from \"./MyPosts.module.css\";\nimport React from \"react\";\nimport Post from \"./Post/Post\";\n\nconst MyPosts = (props) => {\n\n    let postsComponents = props.data.PostsData.map(post => <Post message={post.postText} likesCounter={post.postLikes}/>);\n    let newPostElement = React.createRef()\n\n    let addPost = () => {\n        let text = newPostElement.current.value\n        props.addPost(text)\n    }\n\n    return (\n        <div className={css.postsBlock}>\n            <div className={css.header}> My Posts </div>\n            <div className={css.newPost}>\n                <div><textarea name=\"new-post\" ref={newPostElement} cols=\"30\" rows=\"4\"></textarea></div>\n\n                <button onClick={()=>{addPost()}}>Post</button>\n            </div>\n            <div className={css.posts}>\n                {postsComponents}\n            </div>\n        </div>\n    )\n}\n\nexport default MyPosts;","import React from \"react\";\nimport css from './ProfileInfo.module.css'\n\nconst ProfileInfo = () => {\n    return (\n        <div>\n            <div className={css.cover}>\n                <img src=\"https://p.bigstockphoto.com/eIdTXLbqQilMs9xbjvcs_bigstock-Aerial-View-Of-Sandy-Beach-Wit-256330393.jpg\" alt=\"\"/>\n            </div>\n            <div className={css.description}>\n                <img src=\"https://cdn.iconscout.com/icon/free/png-512/avatar-375-456327.png\" alt=\"\"/>\n                About me\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import React from \"react\";\nimport css from './Profile.module.css'\nimport MyPosts from \"./MyPosts/MyPosts\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo />\n            <MyPosts data={props.data} addPost={props.addPost}/>\n        </div>\n    )\n}\n\nexport default Profile;","import React from \"react\";\n\n\nconst Music = () => {\n    return (\n        <div>Music</div>\n    )\n}\n\nexport default Music;\n","import React from \"react\";\n\n\nconst News = () => {\n    return (\n        <div>News</div>\n    )\n}\n\nexport default News;\n","import React from \"react\";\nimport css from \"./../Dialogs.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\n\nconst DialogItem = (props) => {\n    let path = \"/dialogs/\" + props.id;\n    return (\n        <div className={css.item + ' ' + css.active}>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;","import React from \"react\";\nimport css from \"./../Dialogs.module.css\";\n\n\nconst MessagesItem = (props) => {\n    if(props.own) {\n        return (\n            <div className={css.message + ' ' + css.right}>\n                {props.message}\n            </div>\n        )\n    } else {\n        return (\n            <div className={css.message}>\n                {props.message}\n            </div>\n        )\n    }\n}\n\nexport default MessagesItem;","import React from \"react\";\nimport css from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport MessagesItem from \"./MessageItem/MessageItem\";\n\n\n\nconst Dialogs =  (props) => {\n\n    let DialogsComponents = props.data.DialogsData.map( dialog => <DialogItem name={dialog.name} id={dialog.id}/>);\n    let MessageComponents = props.data.MessagesData.map( message => <li><MessagesItem message={message.message} id={message.id} own={message.own}/></li>);\n\n    return (\n        <div className={css.dialogs}>\n            <div className={css.dialogsItems}>\n                {DialogsComponents}\n            </div>\n            <div className={css.messages}>\n                <ul>\n                    {MessageComponents}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default Dialogs;","import React from \"react\";\n\n\nconst Settings = () => {\n    return (\n        <div>Settings</div>\n    )\n}\n\nexport default Settings;\n","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Profile/Profile\";\nimport Music from \"./components/Music/Music\";\nimport News from \"./components/News/News\";\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport Settings from \"./components/Settings/Settings\";\nimport {Route, BrowserRouter} from \"react-router-dom\";\n\nconst App = (props) => {\n  return (\n      <BrowserRouter>\n          <div className='app-wrapper'>\n              <Header />\n              <Navbar data={props.data.friendsData}/>\n              <div className=\"app-wrapper-content\">\n                  <Route path=\"/dialogs\" component={()=> <Dialogs data={props.data.dialogPage}/> } />\n                  <Route path=\"/profile\" component={()=> <Profile data={props.data.profilePage} addPost={props.addPost}/> }/>\n                  <Route path=\"/news\" component={News}/>\n                  <Route path=\"/music\" component={Music}/>\n                  <Route path=\"/settings\" component={Settings}/>\n              </div>\n\n          </div>\n      </BrowserRouter>\n  );\n}\n\n\n\nexport default App;\n","import {renderEntireTree} from \"./../render.js\"\n\nlet state = {\n    dialogPage : {\n        DialogsData : [\n            {id: 1, name: \"Timych\"},\n            {id: 2, name: \"Yulia\"},\n            {id: 3, name: \"Asal\"},\n            {id: 4, name: \"Sasha\"},\n            {id: 5, name: \"Dimych\"}\n        ],\n        MessagesData : [\n            {id: 1, message: \"How are you?!\", own:false},\n            {id: 2, message: \"Cool! Learning react!\", own:true},\n            {id: 3, message: \"Node rules\", own:false},\n            {id: 4, message: \"Node rules\", own:false},\n            {id: 5, message: \"Node rules\", own:false}\n        ]\n    },\n    profilePage : {\n        PostsData : [\n            {\n                id: 1,\n                postText: \"Клевый пост\",\n                postLikes: 10\n            },\n            {\n                id: 2,\n                postText: \"Hello, how are you?\",\n                postLikes: 8\n            },\n            {\n                id: 3,\n                postText: \"Somebody loves me\",\n                postLikes: 24\n            },\n            {\n                id: 4,\n                postText: \"It's my first post\",\n                postLikes: 3\n            }\n        ]\n    },\n    friendsData : [\n        {\n            id: 1,\n            name: \"Sasha\",\n            photo: \"https://www.befunky.com/images/prismic/2ba00f8e1b504cd1576ff85bd101c2137ea6a02e_landing-photo-to-art-img-4-before.png?auto=webp&format=jpg&width=736\"\n        },\n        {\n            id: 2,\n            name: \"Yuliya\",\n            photo: \"https://i2.wp.com/www.alphr.com/wp-content/uploads/2018/04/how_to_back_up_photos_on_google_photos.jpg?resize=563%2C563&ssl=1\"\n        },\n        {\n            id: 3,\n            name: \"Asal\",\n            photo: \"https://i.pinimg.com/474x/98/3f/e4/983fe4272910dd6579a4e046202f4c38.jpg\"\n        }\n    ]\n}\n\nexport let addPost = (postText) => {\n    let newPost = {\n        id:5,\n        postText : postText,\n        postLikes: 0\n    }\n    state.profilePage.PostsData.push(newPost);\n    renderEntireTree(state);\n}\n\nexport default state;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {addPost} from \"./redux/state\";\n\nexport let renderEntireTree = (state) => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App data={state} addPost={addPost}/>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","import * as serviceWorker from './serviceWorker';\nimport {renderEntireTree} from \"./render\";\nimport state from \"./redux/state.js\"\n\nrenderEntireTree(state);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}